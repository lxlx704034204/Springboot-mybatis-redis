<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.dao.UserMapper">

    <!--<cache type="com.example.springboot.config.MybatisRedisCache">-->
        <!--<property name="eviction" value="LRU" />-->
        <!--<property name="flushInterval" value="6000000" />-->
        <!--<property name="size" value="1024" />-->
        <!--<property name="readOnly" value="false" />-->
    <!--</cache>-->

    <resultMap id="BaseResultMap" type="com.example.springboot.entity.User">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List">
		id, name, age
	</sql>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
    </select>

    <select id="getOne" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE id = #{id}
    </select>

    <select id="getByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE name = #{userName}
    </select>

    <insert id="insert" parameterType="com.example.springboot.entity.User">
		INSERT INTO
		user
		(id,name,age)
		VALUES
		(#{id},#{name}, #{age})
	</insert>
    <!--<update id="update" parameterType="com.example.springboot.entity.User">-->
        <!--UPDATE-->
        <!--user-->
        <!--SET-->
        <!--<if test="voucher.name != null">name = #{voucher.name},</if>-->
        <!--<if test="voucher.age != null">age = #{voucher.age}</if>-->
        <!--WHERE-->
        <!--id = ${voucher.id}-->
    <!--</update>-->

    <update id="update" parameterType="com.example.springboot.entity.User">
        update user
        <trim prefix="set" suffix=" " suffixOverrides="," >
            <if test="voucher.name != null and voucher.name.length()>0">
                name=#{voucher.name} ,
            </if>
            <if test="voucher.age != null">
                age=#{voucher.age} ,
            </if>
        </trim>
        WHERE id = ${voucher.id}
    </update>



    <delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM
		user
		WHERE
		id =#{id}
	</delete>




</mapper>
